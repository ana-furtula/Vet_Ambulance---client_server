/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.view.form;

import client.validation.ValidationException;
import client.validation.Validator;
import client.view.components.TableModelMedicines;
import client.view.controller.Controller;
import commonlib.domain.MeasurementUnit;
import commonlib.domain.Medicine;
import java.awt.Color;
import java.math.BigDecimal;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JDialog;
import javax.swing.JLabel;

/**
 *
 * @author ANA
 */
public class FormNewMedicine extends JDialog {

    TableModelMedicines tblModel;
    JLabel lblMessage;

    /**
     * Creates new form FormMedicine
     */
    public FormNewMedicine(JDialog parent, boolean modal, TableModelMedicines tblModel, JLabel lblMessage) {
        super(parent, modal);
        this.tblModel = tblModel;
        this.lblMessage = lblMessage;
        initComponents();
        prepareView();
        setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSave = new javax.swing.JButton();
        pnlMedicine = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblErrorName = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        lblErrorPrice = new javax.swing.JLabel();
        txtAvailableQuantity = new javax.swing.JTextField();
        lblErrorQuantity = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        lblMeasurementUnit = new javax.swing.JLabel();
        cmbMeasurementUnit = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Novi lijek");

        btnSave.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        btnSave.setText("Sačuvaj");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        pnlMedicine.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Novi lijek", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 0, 16))); // NOI18N
        pnlMedicine.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N

        lblName.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        lblName.setText("Naziv:");

        txtName.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N

        lblErrorName.setFont(new java.awt.Font("Arial Narrow", 0, 12)); // NOI18N
        lblErrorName.setForeground(new java.awt.Color(255, 0, 51));

        lblPrice.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        lblPrice.setText("Cijena:");

        txtPrice.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N

        lblErrorPrice.setFont(new java.awt.Font("Arial Narrow", 0, 12)); // NOI18N
        lblErrorPrice.setForeground(new java.awt.Color(255, 0, 51));

        txtAvailableQuantity.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N

        lblErrorQuantity.setFont(new java.awt.Font("Arial Narrow", 0, 12)); // NOI18N
        lblErrorQuantity.setForeground(new java.awt.Color(255, 0, 51));

        lblQuantity.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        lblQuantity.setText("Raspoloživa količina:");

        lblMeasurementUnit.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        lblMeasurementUnit.setText("Mjerna jedinica:");

        cmbMeasurementUnit.setFont(new java.awt.Font("Lucida Sans", 0, 16)); // NOI18N
        cmbMeasurementUnit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout pnlMedicineLayout = new javax.swing.GroupLayout(pnlMedicine);
        pnlMedicine.setLayout(pnlMedicineLayout);
        pnlMedicineLayout.setHorizontalGroup(
            pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMedicineLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblErrorName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMedicineLayout.createSequentialGroup()
                        .addComponent(lblName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlMedicineLayout.createSequentialGroup()
                        .addComponent(lblPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblErrorPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMedicineLayout.createSequentialGroup()
                        .addComponent(lblQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAvailableQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblErrorQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlMedicineLayout.createSequentialGroup()
                        .addComponent(lblMeasurementUnit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbMeasurementUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlMedicineLayout.setVerticalGroup(
            pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMedicineLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorPrice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAvailableQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblErrorQuantity)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlMedicineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMeasurementUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbMeasurementUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSave))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlMedicine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMedicine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSave)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        boolean signal = true;
        String name = txtName.getText().trim();
        String price = txtPrice.getText().trim();
        String avQuantity = txtAvailableQuantity.getText().trim();
        MeasurementUnit mu = (MeasurementUnit) cmbMeasurementUnit.getSelectedItem();
        try {
            Validator.startValidation()
                    .validateNotNullOrEmpty(name, "Naziv je obavezno polje.").throwIfInvalide();
        } catch (ValidationException ex) {
            signal = false;
            lblErrorName.setText(ex.getMessage());
        }
        try {
            Validator.startValidation()
                    .validateNotNullOrEmpty(price, "Cijena je obavezno polje.")
                    .validateValueIsNumber(price, "Cijena mora biti broj.")
                    .throwIfInvalide();
        } catch (ValidationException ex) {
            signal = false;
            lblErrorPrice.setText(ex.getMessage());
        }
        try {
            Validator.startValidation()
                    .validateNotNullOrEmpty(avQuantity, "Raspoloziva količina je obavezno polje.")
                    .validateValueIsNumber(avQuantity, "Raspoloziva količina mora biti broj.")
                    .throwIfInvalide();
        } catch (ValidationException ex) {
            signal = false;
            lblErrorQuantity.setText(ex.getMessage());
        }
        if (signal) {
            try {
                Medicine medicine = Controller.getInstance().createMedicine(name, new BigDecimal(price), new BigDecimal(avQuantity), mu);

                tblModel.add(medicine);
                lblMessage.setForeground(Color.green);
                lblMessage.setText("Sistem je sačuvao novi lijek");

            } catch (Exception ex) {
                ex.printStackTrace();
                lblMessage.setForeground(Color.red);
                lblMessage.setText("Sistem ne može da sačuva novi lijek");
            }
            this.dispose();
            Timer timer = new Timer();
            timer.schedule(new TimerTask() {
                @Override
                public void run() {
                    lblMessage.setText("");
                }
            }, 3000);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cmbMeasurementUnit;
    private javax.swing.JLabel lblErrorName;
    private javax.swing.JLabel lblErrorPrice;
    private javax.swing.JLabel lblErrorQuantity;
    private javax.swing.JLabel lblMeasurementUnit;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JPanel pnlMedicine;
    private javax.swing.JTextField txtAvailableQuantity;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables

    private void prepareView() {
        cmbMeasurementUnit.removeAllItems();
        for (MeasurementUnit value : MeasurementUnit.values()) {
            cmbMeasurementUnit.addItem(value);
        }
    }
}
